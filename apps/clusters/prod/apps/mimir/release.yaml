apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: mimir
  namespace: grafana
spec:
  chart:
    spec:
      version: "=5.7.0"
  install:
    remediation:
      retries: 0
  interval: 1m0s
  valuesFrom:
    - kind: Secret
      name: auth-minio-secret
      valuesKey: GF_S3_SECRET_KEY
      targetPath: mimir.structuredConfig.common.storage.s3.secret_access_key
    - kind: Secret
      name: auth-minio-secret
      valuesKey: GF_S3_ACCESS_KEY
      targetPath: mimir.structuredConfig.common.storage.s3.access_key_id
  # Default values
  # https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml
  values:
    minio:
      enabled: false
    mimir:
      memberlist:
        cluster_label: "{{.Release.Name}}-{{.Release.Namespace}}"
        join_members:
          - mimir-gossip-ring.mimir.svc.cluster.local
      structuredConfig:
        limits:
          ingestion_rate: 200000
          ingestion_burst_size: 600000
          max_global_series_per_user: 30000000
          max_label_name_length: 1024
          max_label_value_length: 2048
          max_label_names_per_series: 50
          out_of_order_time_window: 5m
          ha_cluster_label: cluster
          ha_replica_label: __replica__
        distributor:
          ha_tracker:
            enable_ha_tracker: true
            kvstore:
              store: memberlist
        querier:
#          query_ingesters_within: 3h
          query_store_after: 3h
        blocks_storage:
          tsdb:
            dir: /data/tsdb
            # Kleinerer Blockbereich -> schneller kompaktierbar
            block_ranges_period: [ 1h ]
            # Wie oft wir den Head nach Compaction fragen
            head_compaction_interval: 10m
            # Wie oft fertige Blöcke hochgeladen werden
            ship_interval: 1m
            # Wie lange Ingester Blöcke lokal behalten dürfen
            retention_period: 12h
            # Beschleunigt WAL-Replay beim Start (optional)
            wal_replay_concurrency: 3
          backend: s3
          s3:
            bucket_name: "mimir-blocks"
        alertmanager_storage:
          s3:
            bucket_name: "mimir-alertmanager"
        ruler_storage:
          backend: s3
          s3:
            bucket_name: "mimir-ruler"
        common:
          storage:
            backend: s3
            s3:
             bucket_name: "mimir"
             endpoint: "minio.minio.svc.cluster.local:9000"
             insecure: true
             http:
              insecure_skip_verify: true

    alertmanager:
      enabled: false
    compactor:
      persistentVolume:
        size: 20Gi
      resources:
        limits:
          memory: 2.1Gi
        requests:
          cpu: 1
          memory: 1.5Gi
    distributor:
      replicas: 2
      resources:
        limits:
          memory: 5.7Gi
        requests:
          cpu: 2
          memory: 2Gi
    ingester:
      persistentVolume:
        size: 50Gi
      replicas: 3
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: 1
          memory: 4Gi
      topologySpreadConstraints: { }
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: target # support for enterprise.legacyLabels
                    operator: In
                    values:
                      - ingester
              topologyKey: 'kubernetes.io/hostname'

            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - ingester
              topologyKey: 'kubernetes.io/hostname'

      zoneAwareReplication:
        topologyKey: 'kubernetes.io/hostname'
    store_gateway:
      persistentVolume:
        size: 10Gi
      replicas: 3
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 200Mi
      topologySpreadConstraints: { }
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: target # support for enterprise.legacyLabels
                    operator: In
                    values:
                      - store-gateway
              topologyKey: 'kubernetes.io/hostname'

            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - store-gateway
              topologyKey: 'kubernetes.io/hostname'
      zoneAwareReplication:
        topologyKey: 'kubernetes.io/hostname'
    admin-cache:
      enabled: true
      replicas: 3

    chunks-cache:
      enabled: true
      replicas: 3
      resources:
        limits:
          memory: 4Gi
        requests:
          cpu: 500m
          memory: 2Gi

    index-cache:
      enabled: true
      replicas: 3

    metadata-cache:
      enabled: true
      replicas: 3

    results-cache:
      enabled: true
      replicas: 3
    overrides_exporter:
      replicas: 1
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi

    querier:
      replicas: 1
      resources:
        limits:
          memory: 4Gi
        requests:
          cpu: 2
          memory: 2Gi

    query_frontend:
      replicas: 1
      resources:
        limits:
          memory: 4Gi
        requests:
          cpu: 2
          memory: 2Gi

    ruler:
      replicas: 1
      resources:
        limits:
          memory: 4Gi
        requests:
          cpu: 1
          memory: 2Gi
    nginx:
      replicas: 1
      resources:
        limits:
          memory: 731Mi
        requests:
          cpu: 1
          memory: 512Mi

    # Grafana Enterprise Metrics feature related
    admin_api:
      replicas: 1
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi

    gateway:
      replicas: 1
      resources:
        limits:
          memory: 731Mi
        requests:
          cpu: 1
          memory: 512Mi
