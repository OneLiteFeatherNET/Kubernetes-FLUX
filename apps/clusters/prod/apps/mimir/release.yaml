apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: mimir
  namespace: grafana
spec:
  chart:
    spec:
      version: "=5.7.0"
  install:
    remediation:
      retries: 0
  interval: 1m0s
  valuesFrom:
    - kind: Secret
      name: auth-minio-secret
      valuesKey: GF_S3_SECRET_KEY
      targetPath: spec.values.mimir.structuredConfig.common.storage.s3.secret_access_key
    - kind: Secret
      name: auth-minio-secret
      valuesKey: GF_S3_ACCESS_KEY
      targetPath: spec.values.mimir.structuredConfig.common.storage.s3.access_key_id
  # Default values
  # https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml
  values:
    minio:
      enabled: false
    mimir:
      structuredConfig:
        blocks_storage:
          s3:
            bucket_name: "mimir-blocks"
        alertmanager_storage:
          s3:
            bucket_name: "mimir-alertmanager"
        ruler_storage:
          s3:
            bucket_name: "mimir-ruler"
        common:
          storage:
            backend: s3
            s3:
             bucket_name: "mimir"
             endpoint: "minio.minio.svc.cluster.local:9000"
             insecure: true
             http:
              insecure_skip_verify: true
    store_gateway:
      persistentVolume:
        size: 10Gi
      replicas: 3
      resources:
        limits:
          memory: 2.1Gi
        requests:
          cpu: 200m
          memory: 1Gi
      topologySpreadConstraints: { }
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: target # support for enterprise.legacyLabels
                    operator: In
                    values:
                      - store-gateway
              topologyKey: 'kubernetes.io/hostname'

            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - store-gateway
              topologyKey: 'kubernetes.io/hostname'
      zoneAwareReplication:
        topologyKey: 'kubernetes.io/hostname'
