apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: grafana
spec:
  chart:
    spec:
      version: "*"
  valuesFrom:
    - kind: Secret
      name: auth-grafana-secret
      valuesKey: GF_AUTH_AZUREAD_CLIENT_ID
      targetPath: grafana\.ini.auth\.azuread.client_id
    - kind: Secret
      name: auth-grafana-secret
      valuesKey: GF_AUTH_AZUREAD_CLIENT_SECRET
      targetPath: grafana\.ini.auth\.azuread.client_secret
    - kind: Secret
      name: auth-grafana-secret
      valuesKey: GF_POSTGRESQL_PASSWORD
      targetPath: grafana\.ini.database.password
    - kind: Secret
      name: auth-grafana-secret
      valuesKey: GRAFANA_MYSQL_PASSWORD_COREPROTECT
      targetPath: datasources.datasources\.yaml.datasources[2].secureJsonData.password
  values:
    replicas: 2
    assertNoLeakedSecrets: false
    imageRenderer:
      enabled: true
    deploymentStrategy:
      type: RollingUpdate
    persistence:
      enabled: false
    service:
      port: 3000
    grafana.ini:
      server:
        root_url: 'https://%(domain)s/'
        domain: "grafana.onelitefeather.dev"
        serve_from_sub_path: true
      log:
        mode: console
      log.console:
        level: warn
        format: json
      database:
        type: postgres
        host: postgresql-ha-pgpool.postgresql-ha.svc.cluster.local:5432
        name: grafana
        user: grafana
        ssl_mode: disable
      panels:
        disable_sanitize_html: true
      auth.azuread:
        name: Azure AD
        enabled: true
        allow_sign_up: true
        scopes: openid email profile
        auth_url: https://login.microsoftonline.com/1a14dfb5-0eac-41bf-94cb-195c2e387520/oauth2/v2.0/authorize
        token_url: https://login.microsoftonline.com/1a14dfb5-0eac-41bf-94cb-195c2e387520/oauth2/v2.0/token
        allowed_domains: onelitefeather.net
        role_attribute_strict: false
        allow_assign_grafana_admin: false
    headlessService: true
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Logging
            type: loki
            url: http://loki-gateway.grafana.svc.cluster.local:80
            isDefault: true
          - name: Metrics
            type: prometheus
            url: http://mimir-nginx.grafana.svc.cluster:80/prometheus
            isDefault: false
          - name: CoreProtect
            type: mysql
            url: mariadb-ha-mariadb-galera.mariadb-ha.svc.cluster.local:3306
            user: coreprotect
            jsonData:
              database: coreprotect
              maxOpenConns: 100
              maxIdleConns: 100
              maxIdleConnsAuto: true
              connMaxLifetime: 14400

    ingress:
      enabled: true
      # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
      # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
      # ingressClassName: nginx
      # Values can be templated
      annotations:
        ingress.kubernetes.io/ssl-redirect: "true"
        ingress.kubernetes.io/proxy-body-size: "2G"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "2G"
        cert-manager.io/cluster-issuer: letsencrypt-prod
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: { }
      path: /

      # pathType is only for k8s >= 1.1=
      pathType: Prefix

      hosts:
        - grafana.onelitefeather.dev
      ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
      extraPaths: [ ]
      # - path: /*
      #   backend:
      #     serviceName: ssl-redirect
      #     servicePort: use-annotation
      ## Or for k8s > 1.19
      # - path: /*
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: ssl-redirect
      #       port:
      #         name: use-annotation


      tls:
        - secretName: grafana-onelitefeather-dev-tls
          hosts:
            - grafana.onelitefeather.dev
