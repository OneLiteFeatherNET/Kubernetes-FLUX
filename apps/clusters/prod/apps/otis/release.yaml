apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otis
  namespace: otis
spec:
  values:
    image:
      repository: harbor.onelitefeather.dev/otis/otis
      pullPolicy: IfNotPresent
      tag: "1.4.0"
    imagePullSecrets:
      - name: harbor-pull
    service:
      port: 8080
    ingress:
      enabled: true
      # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
      # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
      # ingressClassName: nginx
      # Values can be templated
      annotations:
        ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/whitelist-source-range: "${ALLOWED_CIDRS}"
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: { }
      path: /

      # pathType is only for k8s >= 1.1=
      pathType: Prefix

      hosts:
        - otis.apps.onelitefeather.dev
      ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
      extraPaths: [ ]
      # - path: /*
      #   backend:
      #     serviceName: ssl-redirect
      #     servicePort: use-annotation
      ## Or for k8s > 1.19
      # - path: /*
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: ssl-redirect
      #       port:
      #         name: use-annotation


      tls:
        - secretName: otis-apps-onelitefeather-dev-tls
          hosts:
            - otis.apps.onelitefeather.dev
    profiles: [ "prod" ]

    config:
      base: |-
        micronaut:
          application:
            name: otis
      profiles:
        prod: |-
          datasources:
            default:
              url: ${JDBC_URL}
              username: ${DB_USER}
              password: ${DB_PASS}
              driver-class-name: org.postgresql.Driver
    envFrom:
      - secretRef:
          name: otis-app-db

    readinessProbe:
      path: /health
      initialDelaySeconds: 5
      periodSeconds: 5
    livenessProbe:
      path: /health
      initialDelaySeconds: 15
      periodSeconds: 10