apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otis
  namespace: otis
spec:
  values:
    image:
      repository: harbor.onelitefeather.dev/otis/otis
      pullPolicy: IfNotPresent
      tag: "1.9.1"
    imagePullSecrets:
      - name: harbor-pull
    service:
      port: 8080
    ingress:
      enabled: true
      className: nginx
      annotations:
        ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/whitelist-source-range: "${ALLOWED_CIDRS}"
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: basic-auth
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
        nginx.ingress.kubernetes.io/satisfy: "any"
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

      hosts:
        - host: otis.apps.onelitefeather.dev
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: otis-apps-onelitefeather-dev-tls
          hosts:
            - otis.apps.onelitefeather.dev
    profiles: [ "prod" ]

    config:
      base: |-
        micronaut:
          application:
            name: otis
      profiles:
        prod: |-
          datasources:
            default:
              url: $${JDBC_URL}
              username: $${DB_USER}
              password: $${DB_PASS}
              dialect: MYSQL
              driverClassName: org.mariadb.jdbc.Driver
              schema-generate: NONE
    envFrom:
      - secretRef:
          name: otis-app-db

    readinessProbe:
      path: /health
      initialDelaySeconds: 5
      periodSeconds: 5
    livenessProbe:
      path: /health
      initialDelaySeconds: 15
      periodSeconds: 10