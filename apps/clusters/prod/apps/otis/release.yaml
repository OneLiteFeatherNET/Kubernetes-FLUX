apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otis
  namespace: otis
spec:
  values:
    image:
      repository: harbor.onelitefeather.dev/otis/otis
      pullPolicy: IfNotPresent
      tag: "1.10.9"
    imagePullSecrets:
      - name: harbor-pull
    service:
      port: 8080
    ingress:
      enabled: true
      className: nginx
      annotations:
        ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/whitelist-source-range: "${ALLOWED_CIDRS}"
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: basic-auth
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
        nginx.ingress.kubernetes.io/satisfy: "any"
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

      hosts:
        - host: otis.apps.onelitefeather.dev
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: otis-apps-onelitefeather-dev-tls
          hosts:
            - otis.apps.onelitefeather.dev
    profiles: [ "prod" ]

    config:
      base: |-
        micronaut:
          application:
            name: Otis Backend
            server:
              port: 8080
            netty:
              access-logger:
                enabled: false
      profiles:
        prod: |-
          endpoints:
            health:
              enabled: true
              sensitive: false
            metrics:
              enabled: true
              sensitive: true
          micrometer:
            metrics:
              enabled: true
            export:
              prometheus:
                enabled: true
          logger:
            levels:
              "org.hibernate.SQL": WARN
              "org.hibernate.type.descriptor.sql": WARN
              "org.hibernate.orm.connections.pooling": INFO
              "com.zaxxer.hikari": INFO
          jpa:
            default:
              properties:
                hibernate:
                  hbm2ddl.auto: none
                  dialect: org.hibernate.dialect.MariaDBDialect
                  format_sql: false
                  show_sql: false
                  jdbc.lob.non_contextual_creation: true
                  connection.provider_disables_autocommit: true
                  jdbc.batch_size: 50
                  order_inserts: true
                  order_updates: true
          datasources:
            default:
              dialect: MYSQL
              url: $${JDBC_URL}
              username: $${DB_USER}
              password: $${DB_PASS}
              schema-generate: NONE
              dialect: MYSQL
              maximumPoolSize: 20
              minimumIdle: 4
              autoCommit: false
              poolName: "HikariPool-Otis-Backend"
              connectionTimeout: 10000
              validationTimeout: 5000
              idleTimeout: 600000
              maxLifetime: 1700000
              keepaliveTime: 300000
              registerMbeans: true
              leakDetectionThreshold: 20000
              transactionIsolation: TRANSACTION_READ_COMMITTED
    envFrom:
      - secretRef:
          name: otis-app-db

    readinessProbe:
      path: /health
      initialDelaySeconds: 5
      periodSeconds: 5
    livenessProbe:
      path: /health
      initialDelaySeconds: 15
      periodSeconds: 10