# Default values for outline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
# Secret Keys required in your Kubernetes Secret:
#   - SECRET_KEY: Application secret key.
#   - DATABASE_URL: Database connection string.
#   - AWS_ACCESS_KEY_ID: AWS access key.
#   - AWS_SECRET_ACCESS_KEY: AWS secret key.
#   - SLACK_CLIENT_SECRET: Slack client secret.
#   - GOOGLE_CLIENT_SECRET: Google client secret.
#   - AZURE_CLIENT_SECRET: Azure client secret.
#   - SMTP_HOST, SMTP_PORT, SMTP_USERNAME, SMTP_PASSWORD: SMTP credentials.

# Additional documentation for existingSecret usage:
# outline.general.existingSecret => SECRET_KEY, UTILS_SECRET
# outline.database.existingSecret => DATABASE_URL
# outline.auth.slack.existingSecret => SLACK_CLIENT_SECRET
# outline.auth.google.existingSecret => GOOGLE_CLIENT_SECRET
# outline.auth.azure.existingSecret => AZURE_CLIENT_SECRET
# outline.auth.notion.existingSecret => NOTION_CLIENT_SECRET
# outline.auth.github.existingSecret => GITHUB_CLIENT_SECRET
# outline.auth.discord.existingSecret => DISCORD_CLIENT_SECRET
# outline.auth.oidc.existingSecret => OIDC_CLIENT_SECRET
# outline.fileStorage.s3.existingSecret => AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY
# outline.sentry.existingSecret => SENTRY_DSN
# outline.redis.existingSecret => REDIS_URL
# outline.smtp.existingSecret => SMTP_PASSWORD

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: outlinewiki/outline
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.69.1"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

outline:
  # Generic Outline environment variables
  general:
    nodeEnv: production
    url: "https://outline.apps.example.com"
    port: 3000
    collectionUrl: ""
    cdnUrl: ""
    forceHttps: true
    enableUpdates: true
    webConcurrency: 5
    maxImportSize: 5120000
    utilsSecret: ""
    secretKey: ""
    sslKey: ""
    sslCert: ""
    defaultLanguage: en_US
    dropboxKey: ""
    logLevel: info
    existingSecret: ""
  rateLimiter:
    enabled: false
    requests: 1000
    durationWindow: 60
  sentry:
    dsn: ""
    environment: ""
    existingSecret: ""
  notion:
    clientId: ""
    clientSecret: ""
    existingSecret: ""
  database:
    url: ""
    connectionPoolMin: 5
    connectionPoolMax: 15
    pgSslMode: disable
    existingSecret: ""
  slackChannel:
    verificationToken: ""
    appId: ""
    messageActions: true
    existingSecret: ""
  redis:
    url: ""
    existingSecret: ""
  auth:
    slack:
      clientId: ""
      clientSecret: ""
      existingSecret: ""
    google:
      clientId: ""
      clientSecret: ""
      existingSecret: ""
    azure:
      clientId: ""
      clientSecret: ""
      resourceAppId: ""
      existingSecret: ""
    github:
      clientId: ""
      clientSecret: ""
      appName: ""
      appId: ""
      appPrivateKey: ""
      existingSecret: ""
    discord:
      clientId: ""
      clientSecret: ""
      serverId: ""
      serverRoles: ""
      existingSecret: ""
    oidc:
      clientId: ""
      clientSecret: ""
      redirectUri: ""
      tokenUri: ""
      userInfoUri: ""
      logoutUri: ""
      usernameClaim: "preferred_username"
      scopes: "openid profile email"
      displayName: "OIDC"
      existingSecret: ""
  fileStorage:
    type: s3
    uploadMaxSize: 26214400
    local:
        rootDir: /var/lib/outline/data
    s3:
      region: "us-west-rack2"
      uploadBucketUrl: ""
      uploadBucketName: ""
      forcePathStyle: true
      acl: private
      existingSecret: ""
  smtp:
    host: ""
    port: 587
    username: ""
    password: ""
    fromEmail: ""
    replyToEmail: ""
    tlsCipher: ""
    secure: true
    existingSecret: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: cilium
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /_health
    port: 3000
readinessProbe:
  httpGet:
    path: /_health
    port: 3000

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

